{"version":3,"sources":["mwlogo.png","Right/Right.js","Wrong/Wrong.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Right","props","react_default","a","createElement","href","link","target","rel","answer","onClick","Wrong","words","word","id","App","state","wordId","def","wordChoice1","wordChoice2","wordChoice3","choices","userChoice","generateWordArray","newChoices","Math","floor","random","length","_this","setState","push","resetGame","wordArray","targetWord","targetId","axios","get","concat","process","then","res","defResult","data","sseq","dt","replace","handleChange","event","parseInt","value","console","log","this","className","type","name","onChange","checked","src_Right_Right","src_Wrong_Wrong","src","mwLogo","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab19367b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mwlogo.765f6060.png\";","import React from 'react';\n\nconst Right = (props) => {\n\n    return (\n\n        <div>\n            Good job! \n            Learn more about <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">{props.answer}</a>.\n            <br/>\n            <br/>\n            Want to play again?\n            <br/>\n            <button onClick={props.onClick}>Yes!</button>\n        </div>\n\n    )\n\n};\n\nexport default Right;","import React from 'react';\n\nconst Wrong = (props) => {\n\n    return (\n\n        <div>\n            Sorry! The correct word is <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">{props.answer}</a>.\n            <br/>\n            <br/>\n            Want to play again?\n            <br/>\n            <button onClick={props.onClick}>Yes!</button>\n        </div>\n\n    )\n\n}\n\nexport default Wrong;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Right from \"./Right/Right\";\nimport Wrong from \"./Wrong/Wrong\";\nimport mwLogo from \"./mwlogo.png\";\n\nconst words = \n[\n    {word: \"baggage\", id: 1}, \n    {word: \"fan\", id: 2}, \n    {word: \"charge\", id: 3}, \n    {word: \"computer\", id: 4}, \n    {word: \"monitor\", id: 5}, \n    {word: \"keyboard\", id: 6}, \n    {word: \"news\", id: 7}, \n    {word: \"space\", id: 8}, \n    {word: \"fare\", id: 9}, \n    {word: \"camera\", id: 10}, \n    {word: \"cable\", id: 11}, \n    {word: \"boarder\", id: 12}, \n    {word: \"dog\", id: 13}, \n    {word: \"robot\", id: 14}, \n    {word: \"comma\", id: 15}, \n    {word: \"mug\", id: 16}, \n    {word: \"bow\", id: 17}, \n    {word: \"arow\", id: 18}, \n    {word: \"row\", id: 19}, \n    {word: \"arrow\", id: 20}, \n    {word: \"screen\", id: 21}, \n    {word: \"sound\", id: 22}, \n    {word: \"mail\", id: 23}, \n    {word: \"stop\", id: 24}, \n    {word: \"travel\", id: 25}, \n    {word: \"program\", id: 26}, \n    {word: \"light\", id: 27}, \n    {word: \"remote\", id: 28}, \n    {word: \"contact\", id: 29}, \n    {word: \"adventure\", id: 30}, \n    {word: \"journey\", id: 31}, \n    {word: \"passage\", id: 32}, \n    {word: \"react\", id: 33}, \n    {word: \"under\", id: 34}, \n    {word: \"tire\", id: 35}, \n    {word: \"support\", id: 36}, \n    {word: \"brave\", id: 37}, \n    {word: \"report\", id: 38}, \n    {word: \"attain\", id: 39}, \n    {word: \"achieve\", id: 40}, \n    {word: \"respond\", id: 41}, \n    {word: \"attach\", id: 42}, \n    {word: \"quirk\", id: 43}, \n    {word: \"expect\", id: 44}, \n    {word: \"await\", id: 45}, \n    {word: \"stay\", id: 46}, \n    {word: \"room\", id: 47}, \n    {word: \"space\", id: 48}, \n    {word: \"period\", id: 49}, \n    {word: \"ranged\", id: 50}, \n    {word: \"incline\", id: 51}, \n    {word: \"recline\", id: 52}, \n    {word: \"fade\", id: 53}, \n    {word: \"lose\", id: 54}, \n    {word: \"accord\", id: 55}, \n    {word: \"render\", id: 56}, \n    {word: \"supply\", id: 57}, \n    {word: \"win\", id: 58}, \n    {word: \"property\", id: 59}, \n    {word: \"forth\", id: 60}, \n    {word: \"shatter\", id: 61}, \n    {word: \"interest\", id: 62}, \n    {word: \"ring\", id: 63}, \n    {word: \"chain\", id: 64}, \n    {word: \"content\", id: 65}, \n    {word: \"board\", id: 66},\n    {word: \"candid\", id: 67}\n];\n// words that reach shortdef endpoint without error\n\n\nclass App extends Component {\n\n    state = {\n        word: \"\",\n        wordId: \"\",\n        def: \"\",\n        wordChoice1: [],\n        wordChoice2: [],\n        wordChoice3: [],\n        choices: [],\n        userChoice: \"\",\n    }\n\n    componentDidMount() {\n        this.resetGame();\n    }\n\n    generateWordArray = () => {\n        let newChoices = [];\n\n        let wordChoice1 = words[Math.floor(Math.random() * words.length)];\n        let wordChoice2 = words[Math.floor(Math.random() * words.length)];\n        let wordChoice3 = words[Math.floor(Math.random() * words.length)];\n        this.setState({\n            wordChoice1: wordChoice1,\n            wordChoice2: wordChoice2,\n            wordChoice3: wordChoice3\n        });\n        newChoices.push(wordChoice1, wordChoice2, wordChoice3);\n        // console.log(newChoices);  \n        this.setState({\n            choices: newChoices\n        });   \n        // prevent repeat words in array\n        if (wordChoice1.id === wordChoice2.id || wordChoice1.id === wordChoice3.id || wordChoice2.id === wordChoice3.id) {\n            this.generateWordArray();\n        }\n        return newChoices; \n    }\n\n    resetGame = () => {\n        let wordArray = this.generateWordArray();\n        let targetWord = wordArray[Math.floor(Math.random() * wordArray.length)];\n        let word = targetWord.word;\n        let targetId = targetWord.id;\n        this.setState({\n            word: word,\n            wordId: targetId,\n            userChoice: \"\"\n        });\n        // console.log(`word = ${word}`);\n        // console.log(targetId);\n        // this is an integer, not a string\n\n        // API call\n        axios.get(`https://www.dictionaryapi.com/api/v3/references/collegiate/json/${word}?key=${process.env.REACT_APP_MW_API_KEY}`)\n        .then(res => {\n            const result = res.data[0].def[0].sseq[0][0][1].dt[0][1]; // shortdef\n            const defResult = result.replace(/{bc}|{it}|a_link|d_link|sx/gi, \"\").replace(/[^a-zA-Z0-9(*), ]/gi, \"\");  \n            //1st replace: specific exclusions. 2nd replace: protected items\n            this.setState({\n                def: defResult\n            });\n            // console.log(`definition = ${defResult}`);\n        });\n    }\n\n    handleChange = (event) => {\n        // no event.preventDefault(); because want it to work on first click\n        this.setState({\n            userChoice: parseInt(event.target.value)\n        }, () => {\n            console.log(\"\");\n            // callback to update in real time\n        });\n      };\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n            <div className=\"header\">\n                <h1 id=\"title\">What Does It Mean?</h1>\n                <h4>Match the word to the definition\n                    <br/>\n                Sometimes it's an obsolete usage!</h4>\n            </div>\n\n            <form className=\"form\">\n\n                <div className=\"def\">\n                    Definition: \n                    <br/>\n                    {this.state.def}\n                </div>\n                    \n                <div id=\"wordText\">\n                    Word Choices:\n                </div>\n\n                <div className=\"wordDiv\" id=\"radio1\">\n                    <input \n                        type=\"radio\"\n                        name=\"radio\"\n                        value={this.state.wordChoice1.id}\n                        className=\"radioButton\"\n                        onChange={this.handleChange}\n                        checked={this.state.userChoice === this.state.wordChoice1.id}\n                    />\n                    <label>{this.state.wordChoice1.word}</label>\n                </div>\n\n                <div className=\"wordDiv\" id=\"radio2\">\n                    <input \n                        type=\"radio\"\n                        name=\"radio\"\n                        value={this.state.wordChoice2.id}\n                        className=\"radioButton\"\n                        onChange={this.handleChange}\n                        checked={this.state.userChoice === this.state.wordChoice2.id}\n                    />\n                    <label>{this.state.wordChoice2.word}</label>\n                </div>\n\n                <div className=\"wordDiv\" id=\"radio3\">\n                    <input \n                        type=\"radio\"\n                        name=\"radio\"\n                        value={this.state.wordChoice3.id}\n                        className=\"radioButton\"\n                        onChange={this.handleChange}\n                        checked={this.state.userChoice === this.state.wordChoice3.id}\n                    />\n                    <label>{this.state.wordChoice3.word}</label>\n                </div>\n\n            </form>\n\n            {this.state.userChoice === this.state.wordId && \n                <div className=\"rightDiv\">\n                    <Right \n                        answer={this.state.word}\n                        link={`https://www.merriam-webster.com/dictionary/${this.state.word}`}\n                        onClick={this.resetGame}\n                    />\n                </div>\n            }\n\n            {this.state.userChoice !== \"\" && \n            this.state.userChoice !== this.state.wordId &&\n                <div className=\"wrongDiv\">\n                    <Wrong \n                        answer={this.state.word}\n                        link={`https://www.merriam-webster.com/dictionary/${this.state.word}`}\n                        onClick={this.resetGame}\n                    />\n                </div>\n            }\n\n            <div className=\"mwLogoDiv\">\n                Powered by <a href=\"https://www.merriam-webster.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><img id=\"mwLogo\" src={mwLogo} alt=\"mwlogo\"/></a>\n            </div>\n\n      </div>\n    // end App\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}