{"version":3,"sources":["mwlogo.png","components/Form/Form.js","components/Right/Right.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","props","react_default","a","createElement","className","type","name","id","concat","label","value","onChange","onClick","htmlFor","Right","href","target","rel","onPlayAgain","words","App","_useState","useState","_useState2","Object","slicedToArray","wordChoices","setWordChoices","_useState3","_useState4","wordDef","setWordDef","_useState5","_useState6","userChoice","setUserChoice","_useState7","_useState8","result","setResult","_useState9","_useState10","randomWord","setRandomWord","_useState11","_useState12","showRightComponent","setShowRightComponent","_useState13","_useState14","isDataReady","setIsDataReady","shuffleArray","shuffledWords","toConsumableArray","i","length","j","Math","floor","random","_ref","slice","console","log","getWordDef","axios","get","process","then","res","data","shortdef","definition","error","catch","finally","handleChange","selectedWord","useEffect","map","wordChoice","index","components_Form_Form","key","components_Right_Right","src","mwLogo","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.95520dd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mwlogo.765f6060.png\";","import React from 'react';\n\nconst Form = (props) => {\n\n    return (\n        <div>\n            <div className=\"form-check\">\n                <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"flexRadioDefault\"\n                    id={`flexRadioDefault_${props.label}`}\n                    value={props.label}\n                    onChange={() => props.onClick(props.label)}  // Pass the selected value directly\n                />\n                    <label className=\"form-check-label\" htmlFor={`flexRadioDefault_${props.label}`}>\n                        {props.label}\n                    </label>\n            </div>\n            <br />\n        </div>\n    );\n};\n\nexport default Form;","import React from 'react';\n\nconst Right = (props) => {\n    return (\n        <div>\n            Good job! \n            Learn more about <a href={`https://www.merriam-webster.com/dictionary/${props.value}`} target=\"_blank\" rel=\"noopener noreferrer\">{props.value}</a>.\n            <br/>\n            <br/>\n            Want to play again?\n            <br/>\n            <button onClick={props.onPlayAgain}>Yes!</button>\n        </div>\n    );\n};\n\nexport default Right;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Form from \"./components/Form/Form\";\nimport Right from \"./components/Right/Right\";\n// import Wrong from \"./Wrong/Wrong\";\nimport mwLogo from \"./mwlogo.png\";\n\nconst words = [\n    \"accord\",\n    \"adventure\",\n    \"achieve\",\n    \"arrow\",\n    \"arow\",\n    \"attach\",\n    \"await\",\n    \"baggage\",\n    \"board\",\n    \"boarder\",\n    \"bow\",\n    \"brave\",\n    \"camera\",\n    \"cable\",\n    \"candid\",\n    \"chain\",\n    \"charge\",\n    \"comma\",\n    \"computer\",\n    \"contact\",\n    \"content\",\n    \"dog\",\n    \"fade\",\n    \"fan\",\n    \"fare\",\n    \"for\",\n    \"forth\",\n    \"incline\",\n    \"interest\",\n    \"journey\",\n    \"keyboard\",\n    \"light\",\n    \"lose\",\n    \"mail\",\n    \"monitor\",\n    \"mug\",\n    \"news\",\n    \"passage\",\n    \"period\",\n    \"program\",\n    \"property\",\n    \"quirk\",\n    \"react\",\n    \"render\",\n    \"report\",\n    \"respond\",\n    \"remote\",\n    \"recline\",\n    \"ranged\",\n    \"ring\",\n    \"robot\",\n    \"room\",\n    \"row\",\n    \"screen\",\n    \"shatter\",\n    \"sound\",\n    \"space\",\n    \"stop\",\n    \"stay\",\n    \"supply\",\n    \"support\",\n    \"travel\",\n    \"tire\",\n    \"under\",\n    \"win\"\n];\n\nfunction App() {\n    const [wordChoices, setWordChoices] = useState([]);\n    const [wordDef, setWordDef] = useState(\"\");\n    const [userChoice, setUserChoice] = useState(\"\");\n    const [result, setResult] = useState(null);\n    const [randomWord, setRandomWord] = useState(\"\");\n    const [showRightComponent, setShowRightComponent] = useState(false);\n    const [isDataReady, setIsDataReady] = useState(false);\n\n    function shuffleArray(words) {\n        const shuffledWords = [...words];\n        for (let i = shuffledWords.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [shuffledWords[i], shuffledWords[j]] = [shuffledWords[j], shuffledWords[i]];\n        }\n\n        const wordChoices = shuffledWords.slice(0, 3);\n        setWordChoices(wordChoices);\n\n        console.log(\"Randomly Selected Words:\", wordChoices);\n\n        const randomIndex = Math.floor(Math.random() * 3);\n        const randomWord = wordChoices[randomIndex];\n\n        console.log(\"Randomly Selected Word:\", randomWord);\n\n        return randomWord;\n    }\n\n    function getWordDef(randomWord) {\n        setRandomWord(randomWord);\n        axios\n            .get(`https://www.dictionaryapi.com/api/v3/references/collegiate/json/${randomWord}?key=${process.env.REACT_APP_API_KEY_MW}`)\n            .then((res) => {\n                if (res.data && res.data.length > 0 && res.data[0].shortdef && res.data[0].shortdef.length > 0) {\n                    const definition = res.data[0].shortdef[0];\n                    console.log(definition);\n                    setWordDef(definition);\n                } else {\n                    console.error(\"Error: Invalid response format\");\n                }\n            })\n            .catch((error) => {\n                console.error(\"Error fetching word definition:\", error);\n            })\n            .finally(() => {\n                setIsDataReady(true);\n            });\n    }\n\n    function handleChange(selectedWord) {\n        setUserChoice(selectedWord);\n        console.log(\"User choice: \", selectedWord);\n    }\n\n    function handleSubmit() {\n        if (userChoice === randomWord) {\n            setResult(\"Correct!\");\n            setShowRightComponent(true);\n        } else {\n            setResult(\"Incorrect. Try again!\");\n        }\n    }\n\n    function handlePlayAgain() {\n        setIsDataReady(false); // Reset data readiness\n        setResult(null);\n        setShowRightComponent(false);\n        setUserChoice(\"\");\n        const randomWord = shuffleArray(words);\n        getWordDef(randomWord);\n    }\n\n    // Fetch data when isDataReady changes\n    useEffect(() => {\n        if (!isDataReady) return;\n        const randomWord = shuffleArray(words);\n        getWordDef(randomWord);\n    }, [isDataReady]);\n\n    useEffect(() => {\n        const randomWord = shuffleArray(words);\n        getWordDef(randomWord);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <div className=\"header\">\n                <h1>What Does It Mean?</h1>\n                <p>Match the word to the definition.<br />Sometimes it's an obsolete usage!</p>\n            </div>\n\n            <div className=\"gameDiv\">\n                <div className=\"definition\">\n                    <p>Definition:<br />{wordDef}</p>\n                </div>\n\n                <hr />\n\n                <div className=\"wordChoices\">\n                    <p>Word Choices:</p>\n                    {isDataReady ? (\n                        wordChoices.map((wordChoice, index) => (\n                            <Form key={index} label={wordChoice} value={wordChoice} onClick={handleChange} />\n                        ))\n                    ) : (\n                        <p>Loading...</p>\n                    )}\n                </div>\n                <button onClick={handleSubmit}>Submit</button>\n                <div className=\"resultsDiv\">\n                    <p>{result}</p>\n                    {showRightComponent && <Right value={randomWord} onPlayAgain={handlePlayAgain} />}\n                </div>\n                <p>Powered by Merriam-Webster <a href=\"https://dictionaryapi.com/\" target=\"_blank\"><img className=\"mwLogo\" src={mwLogo} alt=\"Merriam-Webster Logo\" /></a></p>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}